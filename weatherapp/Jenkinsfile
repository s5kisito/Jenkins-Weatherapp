// pipeline {
//     agent any

//     options {
//         buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5')
//     }

//     stages {

//         stage('Test auth') {
// 	     agent {
//             docker {
//               image 'golang:alpine'
//               args '-u root:root'
//             }
//            }
//             steps {
//                 sh '''
//             id
//             cd weatherapp/auth/src/main
//             go build 
//             cd -
//             ls -la
//                 '''
//             }
//         }

//         stage('Test UI') {
// 	     agent {
//             docker {
//               image 'node:17'
//               args '-u root:root'
//             }
//            }
//             steps {
//                 sh '''
//             id
//             cd weatherapp/UI
//             npm run
//             ls -la
//                 '''
//             }
//         }  

//         stage('Test weather') {
// 	     agent {
//             docker {
//               image 'python:3.8-slim-buster'
//               args '-u root:root'
//             }
//            }
//             steps {
//                 sh '''
//             id
//             cd weatherapp/weather
//              pip3 install -r requirements.txt
//             ls -la
//                 '''
//             }
//         }
pipeline {
  agent any

   stages {

        stage('SonarQube analysis') {
            agent {
                docker {
                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
            }
               environment {
        CI = 'true'
        //  scannerHome = tool 'Sonar'
        scannerHome='/opt/sonar-scanner'
               }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
  



    }
}

             











                                