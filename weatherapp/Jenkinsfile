pipeline {
    agent any

    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5'))
    }

    stages {
    //     stage('Test auth') {
    //         agent {
    //             docker {
    //                 image 'golang:alpine'
    //                 args '-u root:root'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 id
    //                 cd weatherapp/auth/src/main
    //                 go build 
    //                 cd -
    //                 ls -la
    //             '''
    //         }
    //     }

    //     stage('Test UI') {
    //         agent {
    //             docker {
    //                 image 'node:17'
    //                 args '-u root:root'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 id
    //                 cd weatherapp/UI
    //                 npm run
    //                 ls -la
    //             '''
    //         }
    //     }  

    //     stage('Test weather') {
    //         agent {
    //             docker {
    //                 image 'python:3.8-slim-buster'
    //                 args '-u root:root'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 id
    //                 cd weatherapp/weather
    //                 pip3 install -r requirements.txt
    //                 ls -la
    //             '''
    //         }
    //     }

    //     stage('SonarQube analysis') {
    //         agent {
    //             docker {
    //                 image 'sonarsource/sonar-scanner-cli:4.7.0'
    //             }
    //         }
    //         environment {
    //             CI = 'true'
    //             scannerHome = '/opt/sonar-scanner'
    //         }
    //         steps {
    //             withSonarQubeEnv('Sonar') {
    //                 sh "${scannerHome}/bin/sonar-scanner"
    //             }
    //         }
    //     }

    //     stage("Quality Gate") {
    //         steps {
    //             timeout(time: 1, unit: 'HOURS') {
    //                 waitForQualityGate(abortPipeline: true)
    //             }
    //         }
    //     }

    //     stage('Login to Docker Hub') {  
    //         steps {
    //             script {
    //                 // Define your Docker Hub username and access token
    //                 def dockerHubUser = 'kisito2'
    //                 def dockerHubAccessToken = 'dckr_pat_BsJ_HqhkoOw66SYpHsK7q5EcCBw'

    //                 // Docker login command with access token
    //                 sh "echo ${dockerHubAccessToken} | docker login -u ${dockerHubUser} --password-stdin"
    //             }
    //         }
    //     }

    //     stage('Build auth') {
    //         steps {
    //             sh '''
    //                 cd $WORKSPACE/weatherapp/auth
    //                 docker build -t kisito2/weatherapp-auth:${BUILD_NUMBER} .
    //             '''
    //         }
    //     }

    //     stage('Push auth') {
    //         when { 
    //             expression {
    //                 env.GIT_BRANCH == 'origin/develop'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 docker push kisito2/weatherapp-auth:${BUILD_NUMBER}
    //             '''
    //         }
    //     }

          
    //     stage('Build UI') {
    //         steps {
    //             sh '''
    //                 cd $WORKSPACE/weatherapp/UI
    //                 docker build -t kisito2/weatherapp-ui:${BUILD_NUMBER} .
    //             '''
    //         }
    //     }

    //     stage('Push UI') {
    //         when { 
    //             expression {
    //                 env.GIT_BRANCH == 'origin/develop'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 docker push kisito2/weatherapp-ui:${BUILD_NUMBER}
    //             '''
    //         }
    //     }

    //     stage('Build weather') {
    //         steps {
    //             sh '''
    //                 cd $WORKSPACE/weatherapp/weather
    //                 docker build -t kisito2/weatherapp-weather:${BUILD_NUMBER} .
    //             '''
    //         }
    //     }

    //     stage('Push weather') {
    //         when { 
    //             expression {
    //                 env.GIT_BRANCH == 'origin/develop'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 docker push kisito2/weatherapp-weather:${BUILD_NUMBER}
    //             '''
    //         }
    //     }
        
    //     stage('Build DB') {
    //         steps {
    //             sh '''
    //                 cd $WORKSPACE/weatherapp/DB
    //                 docker build -t kisito2/weatherapp-db:${BUILD_NUMBER} .
    //             '''
    //         }
    //     }

    //     stage('Push DB') {
    //         when { 
    //             expression {
    //                 env.GIT_BRANCH == 'origin/develop'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 docker push kisito2/weatherapp-db:${BUILD_NUMBER}
    //             '''
    //         }
    //     }
    //           stage('Build REDIS') {
    //         steps {
    //             sh '''
    //                 cd $WORKSPACE/weatherapp/REDIS
    //                 docker build -t kisito2/weatherapp-redis:${BUILD_NUMBER} .
    //             '''
    //         }
    //     }

    //     stage('Push REDIS') {
    //         when { 
    //             expression {
    //                 env.GIT_BRANCH == 'origin/develop'
    //             }
    //         }
    //         steps {
    //             sh '''
    //                 docker push kisito2/weatherapp-redis:${BUILD_NUMBER}
    //             '''
    //         }
    //     }
        stage('Deploy with Docker Compose') {
            when {
                branch 'develop'
            }
            agent {
                label 'PROD'
            }
            steps {
                script {
                    // Pull and deploy with Docker Compose
                    sh "docker-compose -f /weatherapp docker-compose.yml pull"
                    sh "docker-compose -f /weatherapp docker-compose.yml up -d"
                }
            }
        }


    }
}
